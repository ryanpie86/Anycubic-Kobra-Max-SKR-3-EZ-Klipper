# This file contains common pin mappings for the BigTreeTech SKR 3 EZ.
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader".

# See docs/Config_Reference.md for a description of parameters.

### Enable this to use an RP2040 for your ADXL host. You cannot use the Orange Pi so this is the next best option.
#[mcu adxl]
# Change <mySerial> to whatever you found above. For example,
# usb-Klipper_rp2040_E661640843545B2E-if00
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E660C062137B4E29-if00
#[adxl345]
#cs_pin: adxl:gpio1
#spi_bus: spi0a
#axes_map: x,z,y
#[resonance_tester]
#accel_chip: adxl345
#    203.5, 200, 20
#[output_pin power_mode] # Improve power stability
#pin: adxl:gpio23

[include mainsail.cfg]
[include macros.cfg]

## This is for CrydTeam's automatic accel and velocity testing, comment it out if you don't want to set it up.
## https://github.com/cryd-s/klipper_scripts/tree/main/speed_accel_script
[include speed_test.cfg]

[respond]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_100030001651313238353730-if00

[stepper_x]
step_pin: PD4
dir_pin: PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: !PC1
position_min: -6
position_endstop: -5
position_max: 407
homing_speed: 100

[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
endstop_pin: !PC3
position_min: -23.3
position_endstop: -23.2
position_max: 400
homing_speed: 100

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -20
position_max: 452
homing_speed: 5

[stepper_z1]
step_pin: PD11
dir_pin: PD10
enable_pin: !PD13
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop

[z_tilt]
z_positions: 7, 200
            407, 200
points: 7, 200
        100, 200
        300, 200
        407, 200
speed: 250
retries: 8
retry_tolerance: 0.13

[safe_z_home]
home_xy_position: 203.5, 200 # Center of bed
speed: 100
z_hop: 5               # Move up 5mm
z_hop_speed: 20
move_to_previous: False

[bed_mesh]
speed: 100
horizontal_move_z: 3
mesh_min: 19, 19
mesh_max: 380, 380
algorithm: bicubic
probe_count: 5, 5

[probe]
pin: !PC13
speed: 2.5
samples: 3
samples_tolerance_retries: 3
z_offset: 0.05
activate_gcode: probe_reset

## This is for supplying voltage to the Logic Level Converter
## You will need to use one of these if you intend to reuse the factory print head with strain gauge. It outputs +5V when open and 0V when triggered!!
## If you do not intend to use the factory print head, comment this out
[output_pin 3v3]
pin: PC0
static_value: 1

## This pin carries 3.3V and drops to 0V to reset the factory print head and strain gauge with every sample
## This is needed because the extruder tension changes as your Bowden tube shifts around!!
## If you do not intend to use the factory print head, comment this out
[output_pin probe_reset_pin]
pin: PE5
value: 1

## This macro is needed to reset the factory strain gauge on the Kobra Max
## If you do not intend to use the factory print head, comment this out
[gcode_macro probe_reset]
gcode:
    SET_PIN PIN=probe_reset_pin VALUE=0
    G4 P500
    SET_PIN PIN=probe_reset_pin VALUE=1
    G4 P100

### Don't forget to SET YOUR E-STEPS!
### Measure 120mm, then extrude 100mm
### G1 E100 F100
### step_distance = old_e_steps * ((120 - distance_to_mark) / 100)

[extruder]
step_pin: PD15
dir_pin: PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 7.21
nozzle_diameter: 0.800
filament_diameter: 1.750
heater_pin: PB3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
#control: pid
#pid_kp: 28.130
#pid_ki: 1.875
#pid_kd: 105.487
rotation_distance: 7.21
nozzle_diameter: 0.800
filament_diameter: 1.750
min_temp: 0
max_temp: 250
max_extrude_only_distance: 100.0

[filament_switch_sensor runout]
pause_on_runout: True
switch_pin: !PC2

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PB7

[heater_fan hotend_fan]
pin: PB6
heater: extruder
heater_temp: 50.0

[controller_fan controller_fan]
pin: PB5

[output_pin LED]
pin: PE6
pwm: False
value: 0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[temperature_sensor pi_temp]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9,  EXP1_7=PE11, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PD5
run_current: 0.800
#diag_pin:

[tmc2209 stepper_y]
uart_pin: PD0
run_current: 0.800
#diag_pin:

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.800
#diag_pin:

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.600
#diag_pin:

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.600
#diag_pin:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 69.782
#*# pid_ki = 0.979
#*# pid_kd = 1242.996
#*# control = pid
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.376
#*# pid_ki = 2.179
#*# pid_kd = 112.953
#*#
#*# [probe]
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 68.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 33.4
